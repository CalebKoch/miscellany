{"version":3,"file":"/js/location/map.js","mappings":"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","sources":["webpack:///./resources/assets/js/location/map.js"],"sourcesContent":["/**\n * Map\n */\n\nvar mapModal, mapAdmin, locationInput, mapImage, mapImageOriginalWidth;\nvar mapPositionX, mapPositionY;\nvar mapZoomIn, mapZoomOut, mapZoomReset;\nvar mapToggleShow, mapToggleHide;\nvar mapZoomValue = 100, mapZoomIncrements = 0;\nvar mapDraggable, mapIsMoving = false, mapPointIsMoving = false;\nvar mapPointModalBody, mapPointModalLoading;\nvar mapMouseX, mapMouseY;\n\n// V2\nvar mapElement, mapPanel, mapPanelTarget, mapPanelLoader;\nvar mapAdminMode, mapViewMode, mapAdminModeActivated = false;\nvar mapHelper;\nvar mapEventFirstClick = true;\n\n$(document).ready(function() {\n    // Look for a form to save\n    mapAdmin = $('#location-map-admin');\n    mapPanel = $('#location-map-panel');\n    mapPanelTarget = $('#location-map-panel-target');\n    mapPanelLoader = $('#location-map-panel-loading');\n    mapModal = $('#point-location');\n    locationInput = $('#location_id');\n\n    mapImage = $('#location-map-image');\n    mapZoomIn = $('#map-zoom-in');\n    mapZoomOut = $('#map-zoom-out');\n    mapZoomReset = $('#map-zoom-reset');\n    mapToggleHide = $('#map-toggle-hide');\n    mapToggleShow = $('#map-toggle-show');\n\n    mapPointModalBody = $('#map-point-body');\n    mapPointModalLoading = $('.modal-loading');\n    mapDraggable = $('#draggable-map');\n\n    mapAdminMode = $('#map-admin-mode');\n    mapViewMode = $('#map-view-mode');\n    mapElement = $('.map');\n    mapHelper = $('.map-helper');\n\n    initLocationMap();\n});\n\nfunction initLocationMap() {\n    // Reset the zoom to the biggest value\n    var imgWidth = mapImage.width();\n\n    // If the image hasn't finished loading, let's try again in half a second\n    if (!imgWidth || imgWidth === 0) {\n        //console.log('map', 'waiting another 500 ms for the map to properly load');\n        setTimeout(initLocationMap, 500);\n        return false;\n    }\n\n    if (mapAdmin.length === 1) {\n        initMapAdmin();\n    }\n\n    initMapControls();\n    initPointClick();\n    initMapModeSwitch();\n    initMovePoints();\n    disableMovePoints();\n    //initAddPoints();\n    initMapScroll();\n    resizeMapToPage();\n    initMapLegend();\n}\n\n\n/**\n * Init Clicking on the Map\n */\nfunction initMapAdmin() {\n    var mapModalSubmit = $('#point-location-submit');\n    mapModalSubmit.on('click', function(e) {\n        // Check that a location was selected\n        if (locationInput.val()) {\n            mapAdmin.append(\n                '<div class=\"point admin\" style=\"top:' + mapPositionY + 'px;left:' + mapPositionX + 'px\">' +\n                '<input type=\"hidden\" name=\"map_point[]\" value=\"' + mapPositionX + '-' + mapPositionY + '-' + locationInput.val() + '\" />' +\n                '</div>'\n            );\n            mapModal.modal('toggle');\n        } else {\n\n        }\n    });\n\n    // Handle deleting already loaded points\n    initPointClick();\n}\n\n/**\n * Register click on the map zoom controls\n */\nfunction initMapControls() {\n    if (mapDraggable.length === 1) {\n\n        $('#draggable-map').draggable({\n            drag: function () {\n                mapIsMoving = true;\n            },\n            stop: function () {\n                // Don't update right away, this is a small hack to make sure we're not loading map points when moving\n                setTimeout(function() {\n                    mapIsMoving = false;\n                }, 200);\n            }\n        });\n\n        mapDraggable.mousemove(function (event) {\n            var offset = mapElement.offset();\n            mapMouseX = event.pageX - offset.left;\n            mapMouseY = event.pageY - offset.top;\n        });\n    }\n\n    if (mapZoomIn.length === 1) {\n        mapZoomIn.on('click', function (e) {\n            e.preventDefault();\n            mapZoom(25);\n        });\n        mapZoomOut.on('click', function (e) {\n            e.preventDefault();\n            mapZoom(-25);\n        });\n        mapZoomReset.on('click', function (e) {\n            e.preventDefault();\n            mapZoomValue = 100;\n            mapZoom(0);\n        });\n        mapToggleHide.on('click', function (e) {\n            e.preventDefault();\n            mapTogglePoints(false);\n        });\n        mapToggleShow.on('click', function (e) {\n            e.preventDefault();\n            mapTogglePoints(true);\n        });\n    }\n}\n\n/**\n * Zoom on the map\n * @param change\n * @returns {boolean}\n */\nfunction mapZoom(change) {\n    // Don't have the size yet? Calculate it. We don't calc on page load because if it's on a hidden tab,\n    // it evaluates to 0\n    var min = 10;\n    var max = 300;\n\n    if (!mapImageOriginalWidth) {\n        mapImageOriginalWidth = mapImage.width();\n    }\n    // Min/Max\n    var newZoom = mapZoomValue + change;\n    if (newZoom > max || newZoom < min) {\n        return false;\n    }\n\n    // mapDraggable.addClass('zooming-animation');\n    mapZoomOut.removeAttr('disabled');\n    mapZoomIn.removeAttr('disabled');\n    mapZoomValue = newZoom;\n\n    var magnifier = (mapZoomValue / 100);\n    mapImage.width(mapImageOriginalWidth * magnifier);\n\n    if (change > 0) {\n        mapZoomIncrements++;\n    } else {\n        mapZoomIncrements--;\n    }\n\n    $.each($('.point'), function() {\n        repositionPoint($(this), magnifier);\n    });\n\n    if (mapZoomValue <= min) {\n        mapZoomOut.attr('disabled', 'disabled');\n    } else if (newZoom >= max) {\n        mapZoomIn.attr('disabled', 'disabled');\n    }\n\n    // Move the map towards the position of the mouse\n    var pos = mapDraggable.position();\n    if (change > 0) {\n        // Zoom In, move the map to the top and left as an amount based on the mouse position\n        // new_map_x = map_x - (cursor_x / screen_max_width * (new_map_width - map_width))\n        mapDraggable\n            .css('left', pos.left - (mapMouseX / mapElement.width() * 100))\n            .css('top', pos.top - (mapMouseY / mapElement.height() * 100))\n            //.css('top', pos.top - (mapMouseY * 0.1))\n        ;\n    } else if (change < 0) {\n        mapDraggable\n            .css('left', pos.left + (mapMouseX / mapElement.width() * 100))\n            .css('top', pos.top + (mapMouseY / mapElement.height() * 100))\n            //.css('top', pos.top + (mapMouseY * 0.1))\n        ;\n    }\n\n    // setTimeout(() => {\n    //     mapDraggable.removeClass('zooming-animation');\n    // }, 300);\n}\n\n/**\n * Add update click on all points\n */\nfunction initPointClick() {\n    $.each($('.point'), function (index) {\n        $(this).unbind('click'); // remove previous bindings\n        $(this).on('click', function(e) {\n            // Need this first, so that if we are still moving, it doesn't move to location\n            e.preventDefault();\n\n            if (mapPointIsMoving === true) {\n                return;\n            }\n            loadMapPoint($(this));\n        });\n    });\n}\n\n/**\n * Toggle showing or hiding of points on the map\n * @param show\n */\nfunction mapTogglePoints(show) {\n    if (show) {\n        mapToggleHide.show();\n        mapToggleShow.hide();\n\n        $.each($('.map .point'), function() {\n            $(this).show();\n        });\n    } else {\n        mapToggleHide.hide();\n        mapToggleShow.show();\n\n        $.each($('.map .point'), function() {\n            $(this).hide();\n        });\n    }\n}\n\n/**\n * V2\n */\n\n/**\n * Load a map point into the side panel\n * @param element\n */\nfunction loadMapPoint(element) {\n    if (mapIsMoving === true || mapPointIsMoving === true) {\n        return;\n    }\n\n    // First things first, resize the map area to show the panel on the first click.\n    if (mapEventFirstClick) {\n        mapHelper.fadeOut();\n        mapEventFirstClick = false;\n    }\n\n    // Admin mode? Load the form modal\n    if (mapAdminModeActivated) {\n        showLoadingModal();\n\n        $.ajax({\n            url: element.data('url-modal')\n        }).done(function (result, textStatus, xhr) {\n            if (result) {\n                mapPointModalLoading.hide();\n                mapPointModalBody.html(result).show();\n                initModalForm();\n            }\n        }).fail(function (result, textStatus, xhr) {\n            console.log('map point error', result);\n        });\n\n        return;\n    }\n\n    // Want to load the side panel with the content.\n    if (mapPanel.hasClass('hidden')) {\n        mapPanel.removeClass('hidden');\n        $('#location-map-main').removeClass('col-md-12').addClass('col-md-9 col-sm-8');\n    }\n\n    mapPanelLoader.show();\n    mapPanelTarget.html('');\n\n    // Show the point as being focused, removing any previously focused point\n    $('.point-focus').removeClass('point-focus');\n    element.addClass('point-focus');\n\n    $.ajax(\n        element.data('url-show')\n    ).done(function(data) {\n        mapPanelLoader.hide();\n        mapPanelTarget.html(data);\n\n        // Closing the modal\n        $('.entity-close').on('click', function(e) {\n            //console.log('clicky');\n            hideMapPointDetails();\n        });\n    });\n}\n\n/**\n *\n */\nfunction hideMapPointDetails() {\n    mapPanel.addClass('hidden');\n    $('#location-map-main').removeClass('col-md-9 col-sm-8').addClass('col-md-12');\n}\n\n/**\n * Switch between Admin and View Mode\n */\nfunction initMapModeSwitch() {\n    mapAdminMode.click(function() {\n        $(this).hide();\n        mapAdminModeActivated = true;\n        mapViewMode.show();\n        mapElement.addClass('map-admin-mode');\n\n        activateMovePoints();\n        hideMapPointDetails();\n    });\n\n    mapViewMode.click(function() {\n        $(this).hide();\n        mapAdminModeActivated = false;\n        mapAdminMode.show();\n        mapElement.removeClass('map-admin-mode');\n\n        disableMovePoints();\n    });\n}\n\n/**\n * Open the modal to add a map point\n */\nfunction initAddPoints() {\n    mapImage.click(function(e) {\n        if (mapAdminModeActivated === false) {\n            return;\n        }\n\n        // Don't click if moving\n        if (mapPointIsMoving === true || mapIsMoving === true) {\n            return;\n        }\n\n        showLoadingModal();\n\n        var offset = $(this).offset();\n        mapPositionX = e.pageX - offset.left - 25;\n        mapPositionY = e.pageY - offset.top - 25;\n\n        // Don't allow negative positions\n        if (mapPositionX < 0) {\n            mapPositionX = 0;\n        }\n        if (mapPositionY < 0) {\n            mapPositionY = 0;\n        }\n\n        // Need to adapt the map position to the magnifier to know where we really are.\n        var magnifier = (mapZoomValue / 100);\n        mapPositionY = parseInt(mapPositionY) / magnifier;\n        mapPositionX = parseInt(mapPositionX) / magnifier;\n\n        $.ajax({\n            url: $(this).data('url') + '?axis_y=' + parseInt(mapPositionY) + '&axis_x=' + parseInt(mapPositionX)\n        }).done(function (result, textStatus, xhr) {\n            if (result) {\n                mapPointModalLoading.hide();\n                mapPointModalBody.html(result).show();\n                initModalForm();\n            }\n        }).fail(function (result, textStatus, xhr) {\n            console.log('map point error', result);\n        });\n    });\n}\n\n/**\n * Show the modal in a loading state\n */\nfunction showLoadingModal() {\n    mapPointModalLoading.show();\n    mapPointModalBody.html('');\n    mapModal.modal();\n}\n\n/**\n *\n */\nfunction initMovePoints() {\n    $.each($('.point'), function(index) {\n        addPointMove($(this));\n    });\n}\n\n/**\n * Enable dragging map points\n */\nfunction activateMovePoints() {\n    $.each($('.point'), function(index) {\n        $(this)\n            .draggable({disabled: false});\n    });\n}\n\n/**\n * Disable draggin map points\n */\nfunction disableMovePoints() {\n    $.each($('.point'), function(index) {\n        $(this)\n            .draggable({disabled: true});\n    });\n}\n\n/**\n * Add movable points\n * @param point\n */\nfunction addPointMove(point) {\n    point.draggable({\n        revert: false,\n        start: function(event, ui) {\n            //console.log('start moving point');\n            mapPointIsMoving = true;\n\n            var target = $(event.target);\n            target.addClass('point-moving');\n        },\n        stop: function (event, ui) {\n            // event.preventDefault();\n            var location = $(event.target);\n            location.removeClass('point-moving');\n\n            mapPositionX = ui.position.left;\n            mapPositionY = ui.position.top;\n\n            // Recalculate position based on zoom\n            var magnifier = (mapZoomValue / 100);\n            mapPositionX = mapPositionX / magnifier;\n            mapPositionY = mapPositionY / magnifier;\n\n            data = {\n                axis_x: mapPositionX,\n                axis_y: mapPositionY\n            };\n\n            console.log('url move', location.data('url-move'));\n            $.post(\n                location.data('url-move'),\n                data\n            ).done(function (result, textStatus, xhr) {\n                //event.preventDefault();\n            }).fail(function (result, textStatus, xhr) {\n                // console.log('map point error', result);\n            });\n\n            // We can wait for the ajax request to finish, as the user doesn't need to know that\n            // the event was done properly. This also allows directly clicking on a point\n            // after it was moved to view the form modal\n            setTimeout(() => {\n                mapPointIsMoving = false;\n            }, 50);\n\n\n            //$(this).removeClass('ui-draggable-dragging');\n\n            return true;\n        }\n    });\n}\n\n/**\n * Modal form submit catcher\n */\nfunction initModalForm() {\n    window.initForeignSelect();\n    initDeleteMapPoint();\n    initIconSelect();\n\n    var phaseFirst = $('.phase-first');\n    var phaseSecond = $('.phase-second');\n    var pointSave = $('.point-save');\n    var pointEntity = $('.point-entity');\n    var pointLabel = $('.point-label');\n\n    $('#phase-first-entity').on('click', function (e) {\n        e.preventDefault();\n        pointEntity.show();\n        phaseFirst.hide();\n        phaseSecond.show();\n        pointSave.show();\n    });\n\n    $('#phase-first-label').on('click', function (e) {\n        e.preventDefault();\n        pointLabel.show();\n        phaseFirst.hide();\n        phaseSecond.show();\n        pointSave.show();\n    });\n\n    $('.phase-undo').on('click', function (e) {\n        e.preventDefault();\n        phaseSecond.hide();\n        pointSave.hide();\n        pointEntity.hide();\n        pointLabel.hide();\n        phaseFirst.show();\n    })\n\n    $('.map-point-form').submit(function (e) {\n        var formData = $(this).serialize();\n\n        $.ajax({\n            type        : $(this).attr('method'),\n            url         : $(this).attr('action'),\n            data        : formData,\n            dataType    : 'json',\n            encode          : true\n        }).done(function (data) {\n            mapModal.modal('hide');\n            if (data.point) {\n                // Remove existing one?\n                var existing = $('#' + data.id);\n                if (existing.length === 1) {\n                    existing.remove();\n                }\n\n                $('.map-container').append(data.point);\n                initPointClick();\n\n                // Make the new point movable and add tooltip\n                var newPoint = $('#' + data.id);\n                addPointMove(newPoint);\n\n                var magnifier = (mapZoomValue / 100);\n                repositionPoint(newPoint, magnifier);\n\n                newPoint.tooltip();\n            }\n        }).fail(function (data) {\n            console.log('fail', data);\n            if (data.responseJSON.errors) {\n                $('.location-map-errors').html(buildErrors(data.responseJSON.errors)).fadeIn();\n            }\n        });\n\n        e.preventDefault();\n    });\n\n    $('[data-toggle=\"popover\"]').popover({html:true});\n}\n\n/**\n * Register an event listener on map point delete button. Since this is in a popover,\n * we need to register on the document listener rather than the element directly.\n */\nfunction initDeleteMapPoint() {\n    $(document).on('click', '.map-point-delete', function(e) {\n        var url = $(this).attr('href');\n        e.preventDefault();\n\n        mapPointModalBody.hide();\n        mapPointModalLoading.show();\n\n        $.post({\n            url: url,\n            dataType: 'json',\n            data: {\n                '_method': 'DELETE'\n            },\n            context: this\n        }).done(function (result, textStatus, xhr) {\n            // Hide this\n            if (result.id) {\n                $('#' + result.id).remove();\n            }\n            mapModal.modal('hide');\n        });\n\n        return false;\n    });\n}\n\n/**\n *\n * @param data\n * @returns {string}\n */\nfunction buildErrors(data) {\n    var errors = '';\n    for (var key in data) {\n        // skip loop if the property is from prototype\n        if (!data.hasOwnProperty(key)) continue;\n\n        errors += data[key] + \"<br>\";\n    }\n    return errors;\n}\n\n/**\n * Handle scroll\n */\nfunction initMapScroll() {\n    $(mapImage).bind('wheel', function(event) {\n        if (event.ctrlKey === true) {\n            event.preventDefault();\n            // console.log('wheel', event.originalEvent.deltaY);\n            if (event.originalEvent.deltaY > 0) {\n                mapZoom(-10);\n            } else {\n                mapZoom(10);\n            }\n        }\n    });\n}\n\n/**\n * Reposition a point on the map\n * @param point\n * @param magnifier\n */\nfunction repositionPoint(point, magnifier) {\n    point.css('top', (point.data('top') * magnifier) + 'px');\n    point.css('left', (point.data('left') * magnifier)+ 'px');\n    point.css('width', (point.data('size') * magnifier)+ 'px');\n    point.css('height', (point.data('size')  * magnifier)+ 'px');\n    //$(this).css('border-radius', (25 * magnifier)+ 'px');\n\n    var fontSize = 24;\n    if (point.data('size') === 10) {\n        fontSize = 5;\n    } else if (point.data('size') === 25) {\n        fontSize = 12;\n    } else if (point.data('size') === 100) {\n        fontSize = 56;\n    } else if (point.data('size') === 200) {\n        fontSize = 108;\n    }\n    point.css('font-size', (fontSize * magnifier) + 'px');\n}\n\n/**\n * Resize the map to the map div on page load\n */\nfunction resizeMapToPage() {\n    // Reset the zoom to the biggest value\n    var imgWidth = mapImage.width();\n\n    $('.loading-map').hide();\n\n    var imgHeight = mapImage.height();\n    //console.log('img width, height', imgWidth, imgHeight);\n\n    // Get the view box width and height\n    var mapWidth = mapElement.width();\n    var mapHeight = mapElement.height();\n    //console.log('div width, height', mapWidth, mapHeight);\n\n    // Resize zoom. Always use the width.\n    var ratio = mapWidth / imgWidth;\n\n    mapZoomValue = Math.floor(100 * ratio);\n    mapZoom(0);\n}\n\n/**\n *\n * @param state\n * @returns {*}\n */\nfunction formatState (state) {\n    // Searching...\n    if (!state.id) {\n        return state.text;\n    }\n\n    var element = $(state.element);\n    if (!element) {\n        return state.text;\n    }\n    var icon = element.data('icon');\n    // If there is no icon, use the id\n    if (!icon) {\n        icon = 'ra ra-' + state.id;\n    }\n    else if (icon === 'entity') {\n        return state.text;\n    }\n    // If the icon has no space, it's probably not rpg-awesome\n    else if (!icon.includes(' ')) {\n        icon = 'ra ra-' + icon;\n    }\n\n    var $state = $(\n        '<span><i class=\"' + icon + '\"></i> ' + state.text + '</span>'\n    );\n    return $state;\n};\n\n/**\n * Shape state\n * @param state\n * @returns {jQuery|HTMLElement|*}\n */\nfunction formatShapeState (state) {\n    if (state.id === 'none') {\n        return state.text;\n    }\n\n    var $state = $(\n        '<span><i class=\"fa-solid fa-' + state.id + '\"></i> ' + state.text + '</span>'\n    );\n    return $state;\n}\n/**\n *\n */\nfunction initIconSelect() {\n    $(\".select2-icon\").select2({\n        templateResult: formatState,\n        templateSelection: formatState,\n        language: $(this).data('language')\n    });\n    $(\".spectrum\").spectrum({\n        preferredFormat: \"hex\",\n        showInput: true,\n        showPalette: true,\n        allowEmpty:true\n    });\n    $(\".select2-shape\").select2({\n        templateResult: formatShapeState,\n        templateSelection: formatShapeState,\n        language: $(this).data('language')\n    });\n}\n\n/**\n * Clicking on a map legend should center the map on the point\n */\nfunction initMapLegend() {\n    $(\".map-point-legend\").click(function() {\n        // Reposition the map to center on the clicked part\n        let target = $($(this).attr('href'));\n        // let targetPosition = target.position();\n        // let left =  (mapElement.width() - targetPosition.left) / 3;\n        // let top = (mapElement.height() - targetPosition.top) / 2 ;\n        // let mapWidth = mapElement.width();\n        // mapDraggable\n        //     .css('top', top + 'px')\n        //     .css('left', left + 'px');\n        target.click();\n    });\n}\n"],"names":["mapModal","mapAdmin","locationInput","mapImage","mapImageOriginalWidth","mapPositionX","mapPositionY","mapZoomIn","mapZoomOut","mapZoomReset","mapToggleShow","mapToggleHide","mapDraggable","mapPointModalBody","mapPointModalLoading","mapMouseX","mapMouseY","mapElement","mapPanel","mapPanelTarget","mapPanelLoader","mapAdminMode","mapViewMode","mapHelper","mapZoomValue","mapIsMoving","mapPointIsMoving","mapAdminModeActivated","mapEventFirstClick","initLocationMap","imgWidth","width","setTimeout","length","$","on","e","val","append","modal","initPointClick","draggable","drag","stop","mousemove","event","offset","pageX","left","pageY","top","preventDefault","mapZoom","mapTogglePoints","initMapControls","click","this","hide","show","addClass","each","index","disabled","hideMapPointDetails","removeClass","disableMovePoints","addPointMove","bind","ctrlKey","originalEvent","deltaY","height","mapWidth","ratio","Math","floor","resizeMapToPage","attr","change","newZoom","removeAttr","magnifier","mapZoomIncrements","repositionPoint","pos","position","css","unbind","element","fadeOut","showLoadingModal","ajax","url","data","done","result","textStatus","xhr","html","initModalForm","fail","console","log","hasClass","loadMapPoint","point","revert","start","ui","target","location","axis_x","axis_y","post","window","initForeignSelect","document","dataType","context","id","remove","select2","templateResult","formatState","templateSelection","language","spectrum","preferredFormat","showInput","showPalette","allowEmpty","formatShapeState","initIconSelect","phaseFirst","phaseSecond","pointSave","pointEntity","pointLabel","submit","formData","serialize","type","encode","existing","newPoint","tooltip","responseJSON","errors","key","hasOwnProperty","buildErrors","fadeIn","popover","fontSize","state","text","icon","includes","ready"],"sourceRoot":""}