{"version":3,"file":"summernote-bragi-kanka.min.js","mappings":"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","sources":["webpack://summernote-bragi/./src/Module/EventManager.ts","webpack://summernote-bragi/./src/Module/BragiModal.ts","webpack://summernote-bragi/./src/Module/DataManager.ts","webpack://summernote-bragi/./src/Module/SummernoteBragi.ts","webpack://summernote-bragi/./src/index.ts","webpack://summernote-bragi/./src/Module/index.ts"],"sourcesContent":["export default class EventManager {\n    private events_queue: {};\n    constructor() {\n        // events store\n        this.events_queue = {};\n    }\n\n    // Register an event\n    on(event_name: string, closure: any) {\n        // @ts-ignore\n        if (! Array.isArray(this.events_queue[event_name]) ) {\n            // @ts-ignore\n            this.events_queue[event_name] = [];\n        }\n\n        // @ts-ignore\n        this.events_queue[event_name].push(closure);\n\n        return this;\n    }\n\n    // Fire an event\n    trigger(event_name: string, params: any = []) {\n        // @ts-ignore\n        const events = this.events_queue[event_name] || [];\n\n        for (let i = 0; i < events.length; i++) {\n            events[i].apply(this, params);\n        }\n\n        return this;\n    }\n\n    clearAll() {\n        this.events_queue = {};\n\n        return this;\n    }\n}","import EventManager from './EventManager'\n\nexport default class BragiModal {\n    private $css: JQuery;\n    private readonly select_class: string;\n    private event: EventManager;\n    private template: string;\n    private readonly $modal: any;\n    private options: any;\n\n    constructor(options: any) {\n        this.options = $.extend({\n            // modal max height\n            maxHeight: 500,\n\n            // modal title\n            title: 'Kanka Bragi',\n\n            // close button text\n            close_text: 'Close',\n\n            // save button text\n            ok_text: 'Add',\n        }, options);\n\n        this.event = new EventManager();\n\n        this.template = this.getModalTemplate();\n        this.$modal = $(this.template).hide();\n\n        // class to add to image when selected\n        this.select_class = \"selected-img\";\n\n        this.addStyleToDom();\n        this.setOptions();\n\n        this.attachEvents();\n    }\n\n    setOptions() {\n        this.$modal.find('.modal-body').css('max-height', this.options.maxHeight);\n        this.$modal.find('.modal-title').html(this.options.title);\n        this.$modal.find('#close').html(this.options.close_text);\n    }\n\n    // append data to the modal with data object\n    addData(data: any) {\n\n        //console.log('bragi', 'addData', data);\n\n        this.$modal.find('.header-text').html(data.header);\n\n        if (data.error) {\n            //console.log('bradi', 'error', data.error);\n            this.showError(data.message, true);\n            return;\n        }\n\n        this.showForm(data);\n        return;\n    }\n    // append generated data to the modal with data object\n    addGenerated(data: any) {\n\n        //console.log('bragi', 'addGenerated', data);\n\n        this.availableTokens(data.tokens);\n\n        if (data.error) {\n            this.showError(data.message, true);\n            return;\n        }\n\n        this.$modal.find('.generated').html(data.result).show();\n        this.$modal.find('.modal-footer').show();\n\n        if (data.tokens === 0) {\n            this.$modal.find('form').hide();\n            this.showError(data.message, true);\n        }\n    }\n\n    showError(message_text: any, permanent: any = false) {\n        var $message = this.$modal.find('.message');\n\n        $message.html('<p class=\"alert alert-danger\">' + message_text + '</p>');\n\n        if (!permanent) {\n            setTimeout(function () {\n                $message.html('');\n            }, 5000);\n        }\n    }\n\n    showForm(data: any) {\n        // Inject placeholders and stuff\n        this.$modal.find('input').attr('placeholder', data.texts.placeholder);\n        this.$modal.find('input').attr('maxlength', data.limits.prompt);\n        this.$modal.find('button[name=\"submit\"]').html(data.texts.submit);\n        this.$modal.find('button[name=\"insert\"]').html(data.texts.insert);\n        this.$modal.find('.bragi-loading').html(data.texts.loading);\n        this.$modal.find('.token-count').html(data.tokens);\n        this.$modal.find('.token-text').html(data.texts.tokens);\n        this.$modal.find('input').focus();\n        this.availableTokens(data.tokens);\n\n        var $form = this.$modal.find('form[name=\"bragi-form\"]');\n        $form.show();\n    }\n\n    showLoading () {\n        this.$modal.find('.bragi-loader').show();\n    }\n\n    hideLoading () {\n        this.$modal.find('.bragi-loader').hide();\n    }\n\n    showGenerating () {\n        this.$modal.find('.bragi-loader').show();\n        this.$modal.find('input').prop('disabled', true);\n        this.$modal.find('button[name=\"submit\"]').prop('disabled', true);\n        this.$modal.find('.modal-footer').hide();\n        this.$modal.find('.generated').hide();\n    }\n\n    hideGenerating () {\n        this.$modal.find('.bragi-loader').hide();\n        this.$modal.find('input').removeAttr('disabled').focus();\n        this.$modal.find('button[name=\"submit\"]').removeAttr('disabled');\n    }\n\n    hideErrors () {\n        this.$modal.find('.message').html('');\n    }\n\n    attachEvents() {\n        var _this = this;\n        var $modal = this.$modal;\n\n        // Submitting the form\n        $modal.find('form').submit(function (event: any) {\n            let prompt = $modal.find('input').val();\n\n            // Adding context is optional\n            let nameField = $('[name=\"name\"]');\n            let context:{[k: string]: any} = {};\n            if (nameField) {\n                let bragiName = nameField.data('bragi-name');\n                context.name = bragiName ? bragiName : nameField.val();\n            }\n\n            let genderField = $('[name=\"sex\"]');\n            if (genderField) {\n                context.gender = genderField.val();\n            }\n            let pronounsField = $('[name=\"pronouns\"]');\n            if (pronounsField) {\n                context.pronouns = pronounsField.val();\n            }\n\n            _this.hideErrors();\n            _this.event.trigger('generate', [_this, prompt, context]);\n            return false;\n        });\n\n        $modal.find('button[name=\"insert\"]').click(function(event: any) {\n            _this.event.trigger('beforeSave', [_this]);\n            $modal.modal('hide');\n            _this.event.trigger('save', [_this, $modal.find('.generated').html()]);\n            _this.event.trigger('afterSave', [this]);\n        });\n\n        /*$modal.find(\"button#save\").click(function(event: any) {\n            var $selected_img = $modal.find('.img-item img.' + _this.select_class);\n\n            if (! $selected_img.length) {\n                _this.showError(_this.options.noImageSelected_msg);\n                return;\n            }\n\n            $modal.modal('hide')\n\n            _this.event.trigger('beforeSave', [_this]);\n\n            $selected_img.each(function(index: any, el: any) {\n                _this.event.trigger('save', [_this, $(this)]);\n\n                $(this).removeClass(_this.select_class);\n            });\n\n            _this.event.trigger('afterSave', [this]);\n        });*/\n\n        $modal.on('hidden.bs.modal', function () {\n            _this.event.trigger('close')\n        })\n    }\n\n    open() {\n        this.$modal.modal();\n    }\n\n    clearContent() {\n        // Reset the initial html\n        this.$modal.find('.images-list').html('');\n    }\n\n    getModalTemplate() {\n\n        var bootsrap_version = parseInt(($ as any).fn.modal.Constructor.VERSION);\n        var header_content = [\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n            '<h4 class=\"modal-title\">[bragi title]</h4>'\n        ];\n\n        var modal_html = ''+\n            '<div class=\"modal summernote-bragi fade\" tabindex=\"-1\" role=\"dialog\">'\n                + '<div class=\"modal-lg modal-dialog \">'\n                    + '<div class=\"modal-content\">'\n                        + '<div class=\"modal-header\">'\n                            + (bootsrap_version == 3 ? header_content.join('') : header_content.reverse().join(''))\n                        + '</div>'\n                        + '<div class=\"modal-body p-8\">'\n                            + '<div class=\"flex\">'\n                                + '<img src=\"/images/bragi/bragi.png\" alt=\"Bragi\" class=\"flex-none w-40 h-40\" />'\n                                + '<div class=\"flex-grow p-5\">'\n                                    + '<p class=\"help-block text-xl header-text\"></p>'\n                                    + '<p class=\"help-block text-xl token-text\"></p>'\n                                + '</div>'\n                            + '</div>'\n                            + '<form method=\"GET\" action=\"\" name=\"bragi-form\" class=\"mb-2\" style=\"display: none\">'\n                                + '<div class=\"input-group\">'\n                                    + '<input type=\"text\" name=\"prompt\" class=\"form-control\" data-skip-unsaved=\"true\" />'\n                                    + '<span class=\"input-group-btn\">'\n                                        + '<button type=\"submit\" name=\"submit\" class=\"btn btn-primary\">'\n\n                                        + '</button>'\n                                    + '</span>'\n                                + '</div>'\n                            + '</form>'\n                            + '<div class=\"message\" ></div >'\n                            + '<div class=\"pt-5 generated text-break\"></div>'\n                            + '<div class=\"text-center bragi-loader m-2\" style=\"display: none\">'\n                                + '<i class=\"fa-solid fa-spinner fa-spin fa-3x\" aria-hidden=\"true\"></i>'\n                                + '<p class=\"p-5 bragi-loading\"></p>'\n                            + '</div>'\n                        + '</div>'\n                        + '<div class=\"modal-footer\" style=\"display: none\">'\n                            + '<button name=\"insert\" class=\"btn btn-primary\"></button>'\n                        + '</div>'\n                    + '</div>'\n                + '</div>'\n            + '</div>';\n\n        return modal_html;\n    }\n\n    addStyleToDom() {\n        this.$css = $('<style>'\n                        +'.modal.summernote-bragi .modal-body{'\n                            +'overflow: scroll;'\n                        +'}'\n                        +'.'+ this.select_class +'{'\n                            +'background-color: #5CB85C;'\n                        +'}'\n                    +'</style>');\n        this.$css.appendTo('body');\n    }\n\n    availableTokens(tokens: any) {\n        this.$modal.find('.token-amount').html(tokens);\n    }\n}","import EventManager from './EventManager'\nimport DataManagerOptionsInterface from \"./Interfaces/DataManagerOptionsInterface\";\n\nexport default class DataManager {\n    private fetch_type?: string;\n    private options: DataManagerOptionsInterface;\n    private current_page: number;\n    private is_fetching_locked: boolean;\n    private event: EventManager;\n    private fetch_url: string;\n\n    constructor(options: DataManagerOptionsInterface) {\n        this.options = {\n            ...{\n                // full http url for fetching data\n                url: null,\n\n                // array of objects with 'src' and 'title' keys\n                data: [],\n\n                // the key name that holds the data array\n                responseDataKey: 'data',\n\n                // the key name that holds the next page link\n                nextPageKey: 'links.next',\n            }, ...options\n        }\n\n        this.init();\n    }\n\n    init() {\n        this.current_page = 0;\n        this.is_fetching_locked = false;\n        this.event = new EventManager();\n        this.fetch_url = this.options.url;\n        this.fetch_type = this.options.data.length ? 'data' : (this.fetch_url ? 'url' : null);\n    }\n\n    // stop data fetching if neither next page link nor data were found\n    setNextFetch(response: any) {\n        if (response.next_link && response.data.length) {\n            this.fetch_url = response.next_link;\n        } else {\n            this.lockFetching();\n        }\n    }\n\n    lockFetching() {\n        this.is_fetching_locked = true;\n    }\n\n    unlockFetching() {\n        this.is_fetching_locked = false;\n    }\n\n    parseResponse(response: any) {\n\n        return {\n            response\n        };\n    }\n\n    fetchData() {\n        const _this = this;\n\n        if (this.fetch_type == 'data') {\n\n            this.event.trigger('beforeFetch');\n            this.event.trigger('fetch', [_this.options.data]);\n            this.event.trigger('afterFetch');\n\n        } else if (this.fetch_type == 'url') {\n\n            // Prevent simultaneous requests.\n            // Because we need to get the next page link from each request,\n            // they must be synchronous.\n            if (this.is_fetching_locked) return;\n\n            const current_link = _this.fetch_url;\n\n            this.event.trigger('beforeFetch');\n\n            this.lockFetching();\n\n            $.ajax({\n                url: current_link,\n                beforeSend:function(xhr: any){\n                    // set the request link to get it afterwards in the response\n                    xhr.request_link = current_link;\n                },\n            })\n            .always(function () {\n                // this is the first callback to be called when the request finises\n                _this.unlockFetching();\n            })\n            .done(function(response, status_text, xhr: any){\n                _this.event.trigger('fetch', [\n                    response,\n                    _this.current_page,\n                    xhr.request_link,\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n\n        } else {\n            _this.event.trigger('error', [\"options 'data' or 'url' must be set\"]);\n        }\n    }\n\n    generate(prompt: any,  fields: any) {\n        console.log('DataManager', 'generate');\n        const _this = this;\n        this.event.trigger('beforeGenerating');\n        const current_link = _this.fetch_url;\n        fields.prompt = prompt;\n\n        $.ajax({\n            url: current_link,\n            method: 'POST',\n            data: fields,\n            beforeSend:function(xhr: any){\n                // set the request link to get it afterwards in the response\n                xhr.request_link = current_link;\n            },\n        })\n            .always(function () {\n                // this is the first callback to be called when the request finises\n                _this.unlockFetching();\n            })\n            .done(function(response, status_text, xhr: any){\n                _this.event.trigger('generate', [\n                    response,\n                    xhr.request_link,\n                ]);\n            })\n            .fail(function(error: any) {\n                _this.event.trigger('error', [error.responseJSON.message]);\n            })\n            .always(function () {\n                _this.event.trigger('afterGenerating');\n            });\n    }\n}\n","import BragiModal from './BragiModal'\nimport DataManager from './DataManager'\n\nexport default class SummernoteBragi {\n    private options: any;\n    private plugin_default_options: {};\n    private editor: any;\n    private editable: any;\n    private context: any;\n    private plugin_options: any;\n    private modal: any;\n    private data_manager: any;\n    constructor(options: any) {\n        this.options = $.extend({\n            name: 'bragi',\n            buttonLabel: '<i class=\"fa-solid fa-robot\"></i>',\n            tooltip: 'Bragi'\n        }, options);\n\n        this.plugin_default_options = {}\n    }\n\n    // set the focus to the last focused element in the editor\n    recoverEditorFocus() {\n        var last_focused_el = $(this.editor).data('last_focused_element');\n        if(typeof last_focused_el !== \"undefined\") {\n            var editor = this.editable;\n            var range = document.createRange();\n            var sel = window.getSelection();\n            var cursor_position =  last_focused_el.length;\n\n            range.setStart(last_focused_el, cursor_position);\n            range.collapse(true);\n            sel.removeAllRanges();\n            sel.addRange(range);\n            editor.focus();\n        }\n    }\n\n    saveLastFocusedElement() {\n        var focused_element: any = window.getSelection().focusNode;\n        var parent = $(this.editable).get(0);\n        if ($.contains(parent, focused_element)) {\n            $(this.editor).data('last_focused_element', focused_element)\n        }\n    }\n\n    attachEditorEvents() {\n        var _this = this;\n\n        $(this.editable).on('keypress, mousemove', function() {\n            _this.saveLastFocusedElement();\n        })\n\n        $(this.editable).on('click', 'summernote-bragi-brick .delete', function () {\n            // delete brick\n        })\n\n        $(this.editable).on('click', 'summernote-bragi-brick .edit', function () {\n            let $brick = $(this).parents('summernote-bragi-brick');\n            let data = $brick.data('brick'); // json\n\n            _this.modal.open(data);\n        })\n    }\n\n    initBragi(context: any) {\n        this.context = context;\n        this.editor = this.context.layoutInfo.note;\n        this.editable = this.context.layoutInfo.editable;\n        this.plugin_options = $.extend(\n            this.plugin_default_options,\n            this.context.options[this.options.name] || {}\n        )\n\n        this.modal = new BragiModal(this.plugin_options.modal);\n        this.data_manager = new DataManager(this.plugin_options.source);\n\n        this.attachModalEvents();\n        this.attachEditorEvents();\n    }\n\n    attachModalEvents() {\n        var _this = this;\n\n        this.modal.event.on('beforeSave', function (bragi_modal: any) {\n            _this.recoverEditorFocus();\n        });\n\n        this.modal.event.on('save', function (bragi_modal: any, generatedText: any) {\n            // add selected images to summernote editor\n            _this.context.invoke(\n                'editor.pasteHTML',\n                '<p>' + generatedText + '</p>'\n            );\n        });\n        this.modal.event.on('generate', function (random: any, prompt: any, fields: any) {\n            _this.data_manager.generate(prompt, fields);\n        });\n\n        this.modal.event.on('close', function (bragi_modal: any) {\n            _this.data_manager.init();\n            _this.modal.clearContent();\n        });\n    }\n\n    createButton() {\n        var _this = this;\n\n        var button = ($ as any).summernote.ui.button({\n            className: 'w-100',\n            contents: this.options.buttonLabel,\n            tooltip: this.options.tooltip,\n            click: function() {\n                _this.openBragi();\n            }\n        });\n\n        // create jQuery object from button instance.\n        return button.render();\n    }\n\n    attachDataEvents() {\n        var _this = this;\n\n        this.data_manager.event\n        .on('beforeFetch', function () {\n            _this.modal.showLoading();\n        })\n        .on('beforeGenerating', function () {\n            _this.modal.showGenerating();\n        })\n        .on('fetch', function (data: any) {\n            _this.modal.addData(data);\n        })\n        .on('generate', function (data: any) {\n            _this.modal.addGenerated(data);\n        })\n        .on('afterFetch', function () {\n            _this.modal.hideLoading();\n        })\n        .on('afterGenerating', function () {\n            _this.modal.hideGenerating();\n        })\n        .on('error', function (error: any) {\n            _this.modal.showError(error, true);\n        })\n        .on('generateError', function (error: any) {\n            _this.modal.showError(error);\n        });\n    }\n\n    openBragi() {\n        this.attachDataEvents();\n        this.data_manager.fetchData();\n        this.modal.open();\n    }\n}","import GalleryPlugin from './Module'\n\nvar gallery_plugin = new GalleryPlugin({});\n\n// add the plugin to summernote\n$.extend(($ as any).summernote.plugins, gallery_plugin.getPlugin());","import SummernoteBragi from './SummernoteBragi'\n\nexport default class BragiPlugin {\n    protected summernote_bragi: any\n    constructor(options: any) {\n        this.summernote_bragi = new SummernoteBragi(options);\n    }\n\n    getPlugin() {\n        let plugin = {};\n        let _this = this;\n        let options = this.summernote_bragi.options\n\n        // @ts-ignore\n        plugin[options.name] = function(context) {\n\n            let sgOptions = context.options[options.name] || {}\n            let buttonLabel = sgOptions.buttonLabel || _this.summernote_bragi.options.buttonLabel\n\n            _this.summernote_bragi.options.buttonLabel = buttonLabel\n\n            // add bragi button\n            context.memo('button.' + options.name, _this.createButton());\n\n            this.events = {\n                'summernote.keyup': function(we: any, e: any)\n                {\n                    _this.summernote_bragi.saveLastFocusedElement();\n                }\n            };\n\n            this.initialize = function() {\n                _this.summernote_bragi.initBragi(context);\n            };\n        }\n\n        return plugin;\n    }\n\n    createButton() {\n        return this.summernote_bragi.createButton();\n    }\n}"],"names":["this","events_queue","on","event_name","closure","Array","isArray","push","trigger","params","events","i","length","apply","clearAll","options","$","extend","maxHeight","title","close_text","ok_text","event","template","getModalTemplate","$modal","hide","select_class","addStyleToDom","setOptions","attachEvents","find","css","html","addData","data","header","error","showError","message","showForm","addGenerated","availableTokens","tokens","result","show","message_text","permanent","$message","setTimeout","attr","texts","placeholder","limits","prompt","submit","insert","loading","focus","showLoading","hideLoading","showGenerating","prop","hideGenerating","removeAttr","hideErrors","_this","val","nameField","context","bragiName","name","genderField","gender","pronounsField","pronouns","click","modal","open","clearContent","header_content","parseInt","fn","Constructor","VERSION","join","reverse","$css","appendTo","url","responseDataKey","nextPageKey","init","current_page","is_fetching_locked","fetch_url","fetch_type","setNextFetch","response","next_link","lockFetching","unlockFetching","parseResponse","fetchData","ajax","beforeSend","xhr","request_link","always","done","status_text","fail","generate","fields","console","log","current_link","method","responseJSON","buttonLabel","tooltip","plugin_default_options","recoverEditorFocus","last_focused_el","editor","editable","range","document","createRange","sel","window","getSelection","cursor_position","setStart","collapse","removeAllRanges","addRange","saveLastFocusedElement","focused_element","focusNode","parent","get","contains","attachEditorEvents","parents","initBragi","layoutInfo","note","plugin_options","data_manager","source","attachModalEvents","bragi_modal","generatedText","invoke","random","createButton","summernote","ui","button","className","contents","openBragi","render","attachDataEvents","gallery_plugin","summernote_bragi","getPlugin","plugin","memo","we","e","initialize","plugins"],"sourceRoot":""}