{"version":3,"file":"summernote-gallery-kanka.min.js","mappings":"2BAAA,WAEI,aAEIA,KAAKC,aAAe,CAAC,CACzB,CAiCJ,OA9BI,YAAAC,GAAA,SAAGC,EAAoBC,GAUnB,OARMC,MAAMC,QAAQN,KAAKC,aAAaE,MAElCH,KAAKC,aAAaE,GAAc,IAIpCH,KAAKC,aAAaE,GAAYI,KAAKH,GAE5BJ,IACX,EAGA,YAAAQ,QAAA,SAAQL,EAAoBM,QAAA,IAAAA,IAAAA,EAAA,IAIxB,IAFA,IAAMC,EAASV,KAAKC,aAAaE,IAAe,GAEvCQ,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAC/BD,EAAOC,GAAGE,MAAMb,KAAMS,GAG1B,OAAOT,IACX,EAEA,YAAAc,SAAA,WAGI,OAFAd,KAAKC,aAAe,CAAC,EAEdD,IACX,EACJ,EAtCA,G,ECEA,WAQI,WAAYe,GACRf,KAAKe,QAAUC,EAAEC,OAAO,CAEpBC,cAAc,EAGdC,UAAW,IAGXC,MAAO,2BAGPC,WAAY,QAGZC,QAAS,MAGTC,eAAgB,aAGhBC,iBAAkB,eAGlBC,oBAAqB,wCACtBV,GAEHf,KAAK0B,MAAQ,IAAI,EAEjB1B,KAAK2B,SAAW3B,KAAK4B,mBACrB5B,KAAK6B,OAASb,EAAEhB,KAAK2B,UAAUG,OAG/B9B,KAAK+B,aAAe,eAEpB/B,KAAKgC,gBACLhC,KAAKiC,aAELjC,KAAKkC,cACT,CAgQJ,OA9PI,YAAAD,WAAA,WACIjC,KAAK6B,OAAOM,KAAK,eAAeC,IAAI,aAAcpC,KAAKe,QAAQI,WAC/DnB,KAAK6B,OAAOM,KAAK,gBAAgBE,KAAKrC,KAAKe,QAAQK,OACnDpB,KAAK6B,OAAOM,KAAK,UAAUE,KAAKrC,KAAKe,QAAQM,YAC7CrB,KAAK6B,OAAOM,KAAK,SAASE,KAAKrC,KAAKe,QAAQO,SAC5CtB,KAAK6B,OAAOM,KAAK,eAAeE,KAAKrC,KAAKe,QAAQQ,gBAClDvB,KAAK6B,OAAOM,KAAK,iBAAiBE,KAAKrC,KAAKe,QAAQS,iBACxD,EAGA,YAAAc,UAAA,SAAUC,EAAWC,GAEjB,IAAIC,EAAezC,KAAK0C,aAAaH,EAAMC,GACxBxC,KAAK6B,OAAOM,KAAK,gBAEnBA,KAAK,aAAavB,OAC/BZ,KAAK6B,OAAOM,KAAK,gBAAgBQ,OAAOF,GAExCzC,KAAK6B,OAAOM,KAAK,gBAAgBE,KAAKI,EAE9C,EAGA,YAAAC,aAAA,SAAaH,EAAWC,GAIpB,IAHA,IAAII,EAAQ5C,KACR6C,EAAU,GAELlC,EAAI,EAAGA,EAAI4B,EAAK3B,OAAQD,IAG7B,GAAI4B,EAAK5B,GAAGmC,QACRC,EAAS/B,EAAE,kEAAoEuB,EAAK5B,GAAGS,MAAQ,eAAiBmB,EAAK5B,GAAGqC,IAAM,QACvHX,KAAK,8DAAgEE,EAAK5B,GAAGS,MAAQ,WAE5F2B,EAAO7C,GAAG,SAAS,SAAUwB,GACzBkB,EAAMK,WAAWjC,EAAEhB,MAAMuC,KAAK,OAClC,KAEAW,EAAQlC,EAAE,8FACJmC,QAAQJ,GACdF,EAAQtC,KAAK2C,OAVjB,CAeA,IAAIH,EAAS/B,EAAE,+CAAgDuB,EAAK5B,GAAGS,MAAO,gBAAkBoB,EAAO,OAEvGO,EAAOK,IAAI,GAAGC,OAAS,WACnBrC,EAAEhB,MAAMsD,SAAS,YAAYxB,OAC7Bd,EAAEhB,MAAME,GAAG,SAAQ,SAASwB,GACxBV,EAAEhB,MAAMuD,YAAYX,EAAMb,aAC9B,GACJ,EAEAgB,EAAOS,KAAK,MAAOjB,EAAK5B,GAAG8C,KAC3BV,EAAOR,KAAK,aAAcA,EAAK5B,GAAG+C,IAElC,IAAIR,EAAQlC,EAAE,wJAOdkC,EAAMC,QAAQJ,GACdF,EAAQtC,KAAK2C,E,CAGjB,OAAOL,CACX,EAEA,YAAAc,UAAA,SAAUC,EAAmBC,QAAA,IAAAA,IAAAA,GAAA,GACzB,IAAIC,EAAW9D,KAAK6B,OAAOM,KAAK,YAEhC2B,EAASzB,KAAK,oCAAsCuB,EAAe,WAE9DC,GACDE,YAAW,WACPD,EAASzB,KAAK,GAClB,GAAG,IAEX,EAEA,YAAA2B,YAAA,WACIhE,KAAK6B,OAAOM,KAAK,0BAA0B8B,MAC/C,EAEA,YAAAC,YAAA,WACIlE,KAAK6B,OAAOM,KAAK,0BAA0BL,MAC/C,EAEA,YAAAI,aAAA,WACI,IAAIU,EAAQ5C,KACR6B,EAAS7B,KAAK6B,OACdsC,EAActC,EAAOM,KAAK,eAE9BN,EAAOM,KAAK,eAAeiC,OAAM,SAAS1C,GACtC,IAAI2C,EAAgBxC,EAAOM,KAAK,iBAAmBS,EAAMb,cAEnDsC,EAAczD,QAKpBiB,EAAOyC,MAAM,QAEb1B,EAAMlB,MAAMlB,QAAQ,aAAc,CAACoC,IAEnCyB,EAAcE,MAAK,SAASC,EAAYC,GACpC7B,EAAMlB,MAAMlB,QAAQ,OAAQ,CAACoC,EAAO5B,EAAEhB,QAEtCgB,EAAEhB,MAAM0E,YAAY9B,EAAMb,aAC9B,IAEAa,EAAMlB,MAAMlB,QAAQ,YAAa,CAACR,QAd9B4C,EAAMe,UAAUf,EAAM7B,QAAQU,oBAetC,IAEAI,EAAO3B,GAAG,mBAAmB,WACzB0C,EAAMlB,MAAMlB,QAAQ,QACxB,IAEAqB,EAAOM,KAAK,qBAAqBiC,OAAM,SAAS1C,GAC5CG,EAAOM,KAAK,OAAOwC,SAAS/B,EAAMb,aACtC,IAEAF,EAAOM,KAAK,uBAAuBiC,OAAM,SAAS1C,GAC9CG,EAAOM,KAAK,OAAOuC,YAAY9B,EAAMb,aACzC,IAEAoC,EAAYS,QAAO,WACf,IAAIC,EAAehD,EAAOM,KAAK,gBACVgC,EAAYW,YAAcX,EAAYY,UAAYF,EAAaE,SAAW,KAG3FnC,EAAMlB,MAAMlB,QAAQ,eAAgB,CAACoC,GAE7C,GACJ,EAEA,YAAAoC,KAAA,WACIhF,KAAK6B,OAAOyC,OAChB,EAEA,YAAAW,aAAA,WAEIjF,KAAK6B,OAAOM,KAAK,gBAAgBE,KAAK,GAC1C,EAGA,YAAA6C,yBAAA,WACI,IAAIC,EAAoBnF,KAAK6B,OAAOM,KAAK,eACrC0C,EAAeM,EAAkBhD,KAAK,gBAE1C,OAAOiD,SAASP,EAAaE,UAAYK,SAASD,EAAkBJ,SACxE,EAEA,YAAAnD,iBAAA,WAEI,IACIyD,EAAiB,CACjB,+HACA,gDA8BJ,MA3BiB,oKAK0B,GAXpBD,SAAUpE,EAAUsE,GAAGhB,MAAMiB,YAAYC,SAWjBH,EAAeI,KAAK,IAAMJ,EAAeK,UAAUD,KAAK,KALtF,4rBA4BrB,EAEA,YAAAzD,cAAA,WACIhC,KAAK2F,KAAO3E,EAAE,qjBAwCkBhB,KAAK+B,aAxCvB,kCA2CQ/B,KAAK+B,aA3Cb,wCA+Cd/B,KAAK2F,KAAKC,SAAS,OACvB,EAEA,YAAA3C,WAAA,SAAWH,GAIP9C,KAAKiF,eACLjF,KAAKgE,cAHOhE,KAKN0B,MAAMlB,QAAQ,aAAc,CALtBR,KAK8B8C,GAC9C,EACJ,EA/SA,G,4NCCA,WAQI,WAAY/B,GACRf,KAAKe,QAAU,EACR,CAECiC,IAAK,KAGLT,KAAM,GAGNsD,gBAAiB,OAGjBC,YAAa,cACX/E,GAGVf,KAAK+F,MACT,CAiKJ,OA/JI,YAAAA,KAAA,WACI/F,KAAKgG,aAAe,EACpBhG,KAAKiG,oBAAqB,EAC1BjG,KAAK0B,MAAQ,IAAI,EACjB1B,KAAKkG,UAAYlG,KAAKe,QAAQiC,IAC9BhD,KAAKmG,WAAanG,KAAKe,QAAQwB,KAAK3B,OAAS,OAAUZ,KAAKkG,UAAY,MAAQ,IACpF,EAGA,YAAAE,aAAA,SAAaC,GACLA,EAASC,WAAaD,EAAS9D,KAAK3B,OACpCZ,KAAKkG,UAAYG,EAASC,UAE1BtG,KAAKuG,cAEb,EAEA,YAAAA,aAAA,WACIvG,KAAKiG,oBAAqB,CAC9B,EAEA,YAAAO,eAAA,WACIxG,KAAKiG,oBAAqB,CAC9B,EAGA,YAAAQ,qBAAA,SAAqBC,EAAaC,EAAoBC,GAClD,IAAMC,EAAQF,EAAWG,MAAM,KAAKC,QAAO,SAAUC,EAAWrG,GAC5D,OAAOqG,EAAOA,EAAKrG,GAAK,CAAC,CAC7B,GAAG+F,GAMH,YAJ0B,IAAfE,IACPA,EAAcC,GAGXA,IAAU7F,EAAEiG,cAAcJ,GAASA,EAAQD,CACtD,EAEA,YAAAM,cAAA,SAAcb,GAEV,MAAO,CACH9D,KAAMvC,KAAKyG,qBAAqBJ,EAAUrG,KAAKe,QAAQ8E,gBAAiB,IACxES,UAAWtG,KAAKyG,qBAAqBJ,EAAUrG,KAAKe,QAAQ+E,YAAa,MAEjF,EAEA,YAAAqB,UAAA,WACI,IAAMvE,EAAQ5C,KAEd,GAAuB,QAAnBA,KAAKmG,WAELnG,KAAK0B,MAAMlB,QAAQ,eACnBR,KAAK0B,MAAMlB,QAAQ,QAAS,CAACoC,EAAM7B,QAAQwB,OAC3CvC,KAAK0B,MAAMlB,QAAQ,mBAEhB,GAAuB,OAAnBR,KAAKmG,WAAqB,CAKjC,GAAInG,KAAKiG,mBAAoB,OAE7B,IAAM,EAAerD,EAAMsD,UAE3BlG,KAAK0B,MAAMlB,QAAQ,eAEnBR,KAAKuG,eAELvF,EAAEoG,KAAK,CACHpE,IAAK,EACLqE,WAAW,SAASC,GAEhBA,EAAIC,aAAe,CACvB,IAEHC,QAAO,WAEJ5E,EAAM4D,gBACV,IACCiB,MAAK,SAASpB,EAAUqB,EAAaJ,GAClC,IAAMK,EAAkB/E,EAAMsE,cAAcb,GAC5CzD,EAAMoD,eAGNpD,EAAMwD,aAAauB,GAEnB/E,EAAMlB,MAAMlB,QAAQ,QAAS,CACzBmH,EAAgBpF,KAChBK,EAAMoD,aACNsB,EAAIC,aACJI,EAAgBrB,WAExB,IACCsB,MAAK,WACFhF,EAAMlB,MAAMlB,QAAQ,QAAS,CAAC,wBAA0B,GAC5D,IACCgH,QAAO,WACJ5E,EAAMlB,MAAMlB,QAAQ,aACxB,G,MAGAoC,EAAMlB,MAAMlB,QAAQ,QAAS,CAAC,uCAEtC,EAEA,YAAAqH,UAAA,WAC2B,OAAnB7H,KAAKmG,YACLnG,KAAKmH,WAEb,EAEA,YAAAW,YAAA,SAAYhF,GACR,IAAIF,EAAQ5C,KAQR+H,EAAejF,EAEnB9C,KAAK0B,MAAMlB,QAAQ,eAEnBR,KAAKuG,eAELvF,EAAEoG,KAAK,CACHpE,IAAK+E,EACLV,WAAW,SAASC,GAEhBA,EAAIC,aAAeQ,CACvB,IAECP,QAAO,WAEJ5E,EAAM4D,gBACV,IACCiB,MAAK,SAASpB,EAAeqB,EAAkBJ,GAE5C,IAAIK,EAAkB/E,EAAMsE,cAAcb,GAC1CzD,EAAMoD,eAGNpD,EAAMwD,aAAauB,GAEnB/E,EAAMlB,MAAMlB,QAAQ,QAAS,CACzBmH,EAAgBpF,KAChBK,EAAMoD,aACNsB,EAAIC,aACJI,EAAgBrB,WAExB,IACCsB,MAAK,WACFhF,EAAMlB,MAAMlB,QAAQ,QAAS,CAAC,wBAA0BuH,GAC5D,IACCP,QAAO,WACJ5E,EAAMlB,MAAMlB,QAAQ,aACxB,GACR,EACJ,EA3LA,G,ECAA,WASI,WAAYO,GACRf,KAAKe,QAAUC,EAAEC,OAAO,CACpB+G,KAAM,oBACNC,YAAa,yCACbC,QAAS,oBACVnH,GAEHf,KAAKmI,uBAAyB,CAAC,CACnC,CA2IJ,OAxII,YAAAC,mBAAA,WACI,IAAIC,EAAkBrH,EAAEhB,KAAKsI,QAAQ/F,KAAK,wBAC1C,QAA8B,IAApB8F,EAAiC,CACvC,IAAIC,EAAStI,KAAKuI,SACdC,EAAQC,SAASC,cACjBC,EAAMC,OAAOC,eACbC,EAAmBT,EAAgBzH,OAEvC4H,EAAMO,SAASV,EAAiBS,GAChCN,EAAMQ,UAAS,GACfL,EAAIM,kBACJN,EAAIO,SAASV,GACbF,EAAOa,O,CAEf,EAEA,YAAAC,uBAAA,WACI,IAAIC,EAAuBT,OAAOC,eAAeS,UAC7CC,EAASvI,EAAEhB,KAAKuI,UAAUnF,IAAI,GAC9BpC,EAAEwI,SAASD,EAAQF,IACnBrI,EAAEhB,KAAKsI,QAAQ/F,KAAK,uBAAwB8G,EAEpD,EAEA,YAAAI,mBAAA,WACI,IAAI7G,EAAQ5C,KAEZgB,EAAEhB,KAAKuI,UAAUrI,GAAG,uBAAuB,WACvC0C,EAAMwG,wBACV,IAEApI,EAAEhB,KAAKuI,UAAUrI,GAAG,QAAS,oCAAoC,WAEjE,IAEAc,EAAEhB,KAAKuI,UAAUrI,GAAG,QAAS,kCAAkC,WAC3D,IACIqC,EADSvB,EAAEhB,MAAM0J,QAAQ,4BACXnH,KAAK,SAEvBK,EAAM0B,MAAMU,KAAKzC,EACrB,GACJ,EAEA,YAAAoH,YAAA,SAAYC,GACR5J,KAAK4J,QAAUA,EACf5J,KAAKsI,OAAStI,KAAK4J,QAAQC,WAAWC,KACtC9J,KAAKuI,SAAWvI,KAAK4J,QAAQC,WAAWtB,SACxCvI,KAAK+J,eAAiB/I,EAAEC,OACpBjB,KAAKmI,uBACLnI,KAAK4J,QAAQ7I,QAAQf,KAAKe,QAAQiH,OAAS,CAAC,GAGhDhI,KAAKsE,MAAQ,IAAI,EAAatE,KAAK+J,eAAezF,OAClDtE,KAAKgK,aAAe,IAAI,EAAYhK,KAAK+J,eAAeE,QAExDjK,KAAKkK,oBACLlK,KAAKyJ,oBACT,EAEA,YAAAS,kBAAA,WACI,IAAItH,EAAQ5C,KAEZA,KAAKsE,MAAM5C,MAAMxB,GAAG,cAAc,SAAUiK,GACxCvH,EAAMwF,oBACV,IAEApI,KAAKsE,MAAM5C,MAAMxB,GAAG,QAAQ,SAAUiK,EAAoBpH,GAEtDH,EAAMgH,QAAQQ,OACV,mBACA,aAAerH,EAAOS,KAAK,OAAS,WAAaT,EAAOS,KAAK,QAAU,IAAM,uBAAyBT,EAAOR,KAAK,eAAiB,IAAM,OAEjJ,IAEAvC,KAAKsE,MAAM5C,MAAMxB,GAAG,gBAAgB,SAAUiK,GACtCvH,EAAM0B,MAAMvD,QAAQG,cACpB0B,EAAMoH,aAAanC,WAE3B,IACA7H,KAAKsE,MAAM5C,MAAMxB,GAAG,cAAc,SAAUmK,EAAavH,GACrDF,EAAMoH,aAAalC,YAAYhF,EACnC,IAEA9C,KAAKsE,MAAM5C,MAAMxB,GAAG,SAAS,SAAUiK,GACnCvH,EAAMoH,aAAajE,OACnBnD,EAAM0B,MAAMW,cAChB,GACJ,EAEA,YAAAqF,aAAA,WACI,IAAI1H,EAAQ5C,KAYZ,OAVcgB,EAAUuJ,WAAWC,GAAGC,OAAO,CACzCC,UAAW,QACXC,SAAU3K,KAAKe,QAAQkH,YACvBC,QAASlI,KAAKe,QAAQmH,QACtB9D,MAAO,WACHxB,EAAMgI,aACV,IAIUC,QAClB,EAEA,YAAAC,iBAAA,WACI,IAAIlI,EAAQ5C,KAEZA,KAAKgK,aAAatI,MACjBxB,GAAG,eAAe,WACf0C,EAAM0B,MAAMN,aAChB,IACC9D,GAAG,SAAS,SAAUqC,EAAWC,EAAWuI,GACzCnI,EAAM0B,MAAMhC,UAAUC,EAAMC,GAE5BuB,YAAW,WACHnB,EAAM0B,MAAMvD,QAAQG,eAAiB0B,EAAM0B,MAAMY,4BAGjDtC,EAAMoH,aAAanC,WAE3B,GAAG,IACP,IACC3H,GAAG,cAAc,WACd0C,EAAM0B,MAAMJ,aAChB,IACChE,GAAG,SAAS,SAAU8K,GACnBpI,EAAM0B,MAAMX,UAAUqH,GAAO,EACjC,GACJ,EAEA,YAAAJ,YAAA,WACI5K,KAAK8K,mBACL9K,KAAKgK,aAAa7C,YAClBnH,KAAKsE,MAAMU,MACf,EACJ,EA5JA,GCDA,IAAIiG,EAAiB,ICArB,WAEI,WAAYlK,GACRf,KAAKkL,mBAAqB,IAAI,EAAkBnK,EACpD,CAoCJ,OAlCI,YAAAoK,UAAA,WACI,IAAIC,EAAS,CAAC,EACVxI,EAAQ5C,KACRe,EAAUf,KAAKkL,mBAAmBnK,QAyBtC,OAtBAqK,EAAOrK,EAAQiH,MAAQ,SAAS4B,GAE5B,IACI3B,GADY2B,EAAQ7I,QAAQA,EAAQiH,OAAS,CAAC,GACtBC,aAAerF,EAAMsI,mBAAmBnK,QAAQkH,YAE5ErF,EAAMsI,mBAAmBnK,QAAQkH,YAAcA,EAG/C2B,EAAQyB,KAAK,UAAYtK,EAAQiH,KAAMpF,EAAM0H,gBAE7CtK,KAAKU,OAAS,CACV,mBAAoB,SAAS4K,EAASC,GAElC3I,EAAMsI,mBAAmB9B,wBAC7B,GAGJpJ,KAAKwL,WAAa,WACd5I,EAAMsI,mBAAmBvB,YAAYC,EACzC,CACJ,EAEOwB,CACX,EAEA,YAAAd,aAAA,WACI,OAAOtK,KAAKkL,mBAAmBZ,cACnC,EACJ,EAxCA,GDAqB,CAAkB,CAAC,GAGxCtJ,EAAEC,OAAQD,EAAUuJ,WAAWkB,QAASR,EAAeE,Y","sources":["webpack://summernote-gallery/./src/Module/EventManager.ts","webpack://summernote-gallery/./src/Module/GalleryModal.ts","webpack://summernote-gallery/./src/Module/DataManager.ts","webpack://summernote-gallery/./src/Module/SummernoteGallery.ts","webpack://summernote-gallery/./src/index.ts","webpack://summernote-gallery/./src/Module/index.ts"],"sourcesContent":["export default class EventManager {\n    private events_queue: {};\n    constructor() {\n        // events store\n        this.events_queue = {};\n    }\n\n    // Register an event\n    on(event_name: string, closure: any) {\n        // @ts-ignore\n        if (! Array.isArray(this.events_queue[event_name]) ) {\n            // @ts-ignore\n            this.events_queue[event_name] = [];\n        }\n\n        // @ts-ignore\n        this.events_queue[event_name].push(closure);\n\n        return this;\n    }\n\n    // Fire an event\n    trigger(event_name: string, params: any = []) {\n        // @ts-ignore\n        const events = this.events_queue[event_name] || [];\n\n        for (let i = 0; i < events.length; i++) {\n            events[i].apply(this, params);\n        }\n\n        return this;\n    }\n\n    clearAll() {\n        this.events_queue = {};\n\n        return this;\n    }\n}","import EventManager from './EventManager'\n\nexport default class GalleryModal {\n    private $css: JQuery;\n    private readonly select_class: string;\n    private event: EventManager;\n    private template: string;\n    private readonly $modal: any;\n    private options: any;\n\n    constructor(options: any) {\n        this.options = $.extend({\n            // load more data on modal scroll\n            loadOnScroll: false,\n\n            // modal max height\n            maxHeight: 500,\n\n            // modal title\n            title: 'summernote image gallery',\n\n            // close button text\n            close_text: 'Close',\n\n            // save button text\n            ok_text: 'Add',\n\n            // select all button text\n            selectAll_text: 'Select all',\n\n            // deselect all button text\n            deselectAll_text: 'Deselect all',\n\n            // message error to display when no image is selected\n            noImageSelected_msg: 'One image at least must be selected.'\n        }, options);\n\n        this.event = new EventManager();\n\n        this.template = this.getModalTemplate();\n        this.$modal = $(this.template).hide();\n\n        // class to add to image when selected\n        this.select_class = \"selected-img\";\n\n        this.addStyleToDom();\n        this.setOptions();\n\n        this.attachEvents();\n    }\n\n    setOptions() {\n        this.$modal.find('.modal-body').css('max-height', this.options.maxHeight);\n        this.$modal.find('.modal-title').html(this.options.title);\n        this.$modal.find('#close').html(this.options.close_text);\n        this.$modal.find('#save').html(this.options.ok_text);\n        this.$modal.find('#select-all').html(this.options.selectAll_text);\n        this.$modal.find('#deselect-all').html(this.options.deselectAll_text);\n    }\n\n    // append images to the modal with data object\n    addImages(data: any, page: any) {\n\n        var $page_images = this.createImages(data, page);\n        var $images_list = this.$modal.find('.images-list');\n\n        if ($images_list.find('.img-item').length) {\n            this.$modal.find('.images-list').append($page_images);\n        } else {\n            this.$modal.find('.images-list').html($page_images);\n        }\n    }\n\n    // generate image elements from data object\n    createImages(data: any, page: any) {\n        var _this = this;\n        let content = []\n\n        for (var i = 0; i < data.length; i++) {\n\n            // If we're working with a folder, different stuff going on\n            if (data[i].folder) {\n                $image = $('<div class=\"col-md-12 img-thumbnail cursor text-center\" title=\"' + data[i].title + '\" data-url=\"' + data[i].url + '\"/>');\n                $image.html('<span class=\"text\"><i class=\"fa-solid fa-folder fa-2x\"></i>' + data[i].title + '</span>');\n\n                $image.on('click', function (event) {\n                    _this.loadFolder($(this).data('url'));\n                });\n\n                $item = $('<div class=\"col-md-2 img-item\">' + '<i class=\"fa-solid fa-check\" aria-hidden=\"true\"></i>' + '</div>');\n                $item.prepend($image);\n                content.push($item);\n\n                continue;\n            }\n\n            var $image = $('<img class=\"img-thumbnail sng-image\" title=\"'+ data[i].title +'\" data-page=\"' + page + '\"/>');\n\n            $image.get(0).onload = function() {\n                $(this).siblings('.loading').hide()\n                $(this).on('click',function(event) {\n                    $(this).toggleClass(_this.select_class);\n                });\n            }\n\n            $image.attr('src', data[i].src);\n            $image.data('gallery-id', data[i].id);\n\n            var $item = $('<div class=\"col-md-2 mb-4 img-item\">'\n                            +'<i class=\"fa fa-check\"></i>'\n                            +'<span class=\"loading\">'\n                                +'<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            +'</span>'\n                        +'</div>');\n\n            $item.prepend($image);\n            content.push($item)\n        }\n\n        return content;\n    }\n\n    showError(message_text: any, permanent: any = false) {\n        var $message = this.$modal.find('.message');\n\n        $message.html('<span class=\"alert alert-danger\">' + message_text + '</span>');\n\n        if (!permanent) {\n            setTimeout(function () {\n                $message.html('');\n            }, 5000);\n        }\n    }\n\n    showLoading () {\n        this.$modal.find('.modal-footer .loading').show();\n    }\n\n    hideLoading () {\n        this.$modal.find('.modal-footer .loading').hide();\n    }\n\n    attachEvents() {\n        var _this = this;\n        var $modal = this.$modal;\n        var $modal_body = $modal.find('.modal-body');\n\n        $modal.find(\"button#save\").click(function(event: any) {\n            var $selected_img = $modal.find('.img-item img.' + _this.select_class);\n\n            if (! $selected_img.length) {\n                _this.showError(_this.options.noImageSelected_msg);\n                return;\n            }\n\n            $modal.modal('hide')\n\n            _this.event.trigger('beforeSave', [_this]);\n\n            $selected_img.each(function(index: any, el: any) {\n                _this.event.trigger('save', [_this, $(this)]);\n\n                $(this).removeClass(_this.select_class);\n            });\n\n            _this.event.trigger('afterSave', [this]);\n        });\n\n        $modal.on('hidden.bs.modal', function () {\n            _this.event.trigger('close')\n        })\n\n        $modal.find(\"button#select-all\").click(function(event: any) {\n            $modal.find('img').addClass(_this.select_class);\n        });\n\n        $modal.find(\"button#deselect-all\").click(function(event: any) {\n            $modal.find('img').removeClass(_this.select_class);\n        });\n\n        $modal_body.scroll(function() {\n            var $images_list = $modal.find('.images-list');\n            var is_near_bottom = $modal_body.scrollTop() + $modal_body.height() >= $images_list.height() - 100;\n\n            if (is_near_bottom) {\n                _this.event.trigger('scrollBottom', [_this]);\n            }\n        });\n    }\n\n    open() {\n        this.$modal.modal();\n    }\n\n    clearContent() {\n        // Reset the initial html\n        this.$modal.find('.images-list').html('');\n    }\n\n    // whether the images' container has enough content to show the vertical scroll\n    imagesContainerHasScroll() {\n        var $images_container = this.$modal.find('.modal-body');\n        var $images_list = $images_container.find('.images-list');\n\n        return parseInt($images_list.height()) > parseInt($images_container.height());\n    }\n\n    getModalTemplate() {\n\n        var bootsrap_version = parseInt(($ as any).fn.modal.Constructor.VERSION);\n        var header_content = [\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n            '<h4 class=\"modal-title\">[gallery title]</h4>'\n        ];\n\n        var modal_html = ''+\n            '<div class=\"modal summernote-gallery fade\" tabindex=\"-1\" role=\"dialog\">'\n                + '<div class=\"modal-lg modal-dialog \">'\n                    + '<div class=\"modal-content\">'\n                        + '<div class=\"modal-header\">'\n                            + (bootsrap_version == 3 ? header_content.join('') : header_content.reverse().join(''))\n                        + '</div>'\n                        + '<div class=\"modal-body\">'\n                            + '<div class=\"row images-list\">'\n                            + '</div>'\n                        + '</div>'\n                        + '<div class=\"modal-footer\">'\n                            + '<span style=\"display: none;position: absolute;left: 10px;bottom: 10px;\" class=\"loading\" >'\n                                + '<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            + '</span >'\n                            + '<span style=\"display: inline-block; margin-right: 50px;\">'\n                                + '<button type=\"button\" id=\"deselect-all\" class=\"btn btn-default\">[Deselect-all]</button>'\n                                + '<button type=\"button\" id=\"select-all\" class=\"btn btn-default\">[select-all]</button>'\n                            + '</span >'\n                            + '<button type=\"button\" id=\"close\" class=\"btn btn-default\" data-dismiss=\"modal\">[Close]</button>'\n                            + '<button type=\"button\" id=\"save\" class=\"btn btn-primary\">[Add]</button>'\n                            + '<span class=\"message\" ></span >'\n                        + '</div>'\n                    + '</div>'\n                + '</div>'\n            + '</div>';\n\n        return modal_html;\n    }\n\n    addStyleToDom() {\n        this.$css = $('<style>'\n                        +'.img-item{'\n                            +'position : relative;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'position : absolute;'\n                            +'top : -10px;'\n                            +'right : 5px;'\n                            +'font-size: 30px;'\n                            +'color: #337AB7;'\n                        +'}'\n                        +'.img-item .sng-image{'\n                            /*+'min-height : 119.66px;'*/\n                        +'}'\n                        +'.img-item .loading{'\n                            +'position: absolute;'\n                            +'margin: auto;'\n                            +'top: -20px;'\n                            +'bottom: 0;'\n                            +'display: block;'\n                            +'left: 0;'\n                            +'right: 0;'\n                            +'width: 60px;'\n                            +'height: 42px;'\n                            +'text-align: center;'\n                        +'}'\n                        +'.modal.summernote-gallery .message{'\n                            +'display: block;'\n                            +'padding: 30px 0 20px 0;'\n                        +'}'\n                        +'.modal.summernote-gallery .message:empty{'\n                            +'display: block;'\n                            +'padding: 0px!important;'\n                        +'}'\n                        +'.modal.summernote-gallery .modal-body{'\n                            +'overflow: scroll;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'display : none;'\n                        +'}'\n                        +'.img-item .'+ this.select_class +' + .fa-check{'\n                            +'display : block;'\n                        +'}'\n                        +'.'+ this.select_class +'{'\n                            +'background-color: #5CB85C;'\n                        +'}'\n                    +'</style>');\n        this.$css.appendTo('body');\n    }\n\n    loadFolder(folder: any) {\n        //console.log('loading folder', folder);\n        var _this = this;\n\n        this.clearContent();\n        this.showLoading();\n\n        _this.event.trigger('loadFolder', [_this, folder]);\n    }\n}","import EventManager from './EventManager'\nimport DataManagerOptionsInterface from \"./Interfaces/DataManagerOptionsInterface\";\n\nexport default class DataManager {\n    private fetch_type?: string;\n    private options: DataManagerOptionsInterface;\n    private current_page: number;\n    private is_fetching_locked: boolean;\n    private event: EventManager;\n    private fetch_url: string;\n\n    constructor(options: DataManagerOptionsInterface) {\n        this.options = {\n            ...{\n                // full http url for fetching data\n                url: null,\n\n                // array of objects with 'src' and 'title' keys\n                data: [],\n\n                // the key name that holds the data array\n                responseDataKey: 'data',\n\n                // the key name that holds the next page link\n                nextPageKey: 'links.next',\n            }, ...options\n        }\n\n        this.init();\n    }\n\n    init() {\n        this.current_page = 0;\n        this.is_fetching_locked = false;\n        this.event = new EventManager();\n        this.fetch_url = this.options.url;\n        this.fetch_type = this.options.data.length ? 'data' : (this.fetch_url ? 'url' : null);\n    }\n\n    // stop data fetching if neither next page link nor data were found\n    setNextFetch(response: any) {\n        if (response.next_link && response.data.length) {\n            this.fetch_url = response.next_link;\n        } else {\n            this.lockFetching();\n        }\n    }\n\n    lockFetching() {\n        this.is_fetching_locked = true;\n    }\n\n    unlockFetching() {\n        this.is_fetching_locked = false;\n    }\n\n    // get a key from object with dot notation, example: data.key.subkey.\n    getObjectKeyByString(object: any, dotted_key: string, default_val?: any) {\n        const value = dotted_key.split('.').reduce(function (item: any, i: any) {\n            return item ? item[i] : {};\n        }, object);\n\n        if (typeof default_val == 'undefined') {\n            default_val = value;\n        }\n\n        return value && !$.isEmptyObject(value) ? value : default_val;\n    }\n\n    parseResponse(response: any) {\n\n        return {\n            data: this.getObjectKeyByString(response, this.options.responseDataKey, []),\n            next_link: this.getObjectKeyByString(response, this.options.nextPageKey, null)\n        };\n    }\n\n    fetchData() {\n        const _this = this;\n\n        if (this.fetch_type == 'data') {\n\n            this.event.trigger('beforeFetch');\n            this.event.trigger('fetch', [_this.options.data]);\n            this.event.trigger('afterFetch');\n\n        } else if (this.fetch_type == 'url') {\n\n            // Prevent simultaneous requests.\n            // Because we need to get the next page link from each request,\n            // they must be synchronous.\n            if (this.is_fetching_locked) return;\n\n            const current_link = _this.fetch_url;\n\n            this.event.trigger('beforeFetch');\n\n            this.lockFetching();\n\n            $.ajax({\n                url: current_link,\n                beforeSend:function(xhr: any){\n                    // set the request link to get it afterwards in the response\n                    xhr.request_link = current_link;\n                },\n            })\n            .always(function () {\n                // this is the first callback to be called when the request finises\n                _this.unlockFetching();\n            })\n            .done(function(response, status_text, xhr: any){\n                const parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n\n                _this.event.trigger('fetch', [\n                    parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n\n        } else {\n            _this.event.trigger('error', [\"options 'data' or 'url' must be set\"]);\n        }\n    }\n\n    fetchNext() {\n        if (this.fetch_type == 'url') {\n            this.fetchData();\n        }\n    }\n\n    fetchFolder(folder: any) {\n        var _this = this;\n\n        // Prevent simultaneous requests.\n        // Because we need to get the next page link from each request,\n        // they must be synchronous.\n        //if (this.is_fetching_locked) return;\n\n        //console.log('getting images from folder url', folder);\n        var current_link = folder;\n\n        this.event.trigger('beforeFetch');\n\n        this.lockFetching();\n\n        $.ajax({\n            url: current_link,\n            beforeSend:function(xhr: any){\n                // set the request link to get it afterwards in the response\n                xhr.request_link = current_link;\n            },\n        })\n            .always(function () {\n                // this is the first callback to be called when the request finishs\n                _this.unlockFetching();\n            })\n            .done(function(response: any, status_text: any, xhr: any){\n\n                var parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n\n                _this.event.trigger('fetch', [\n                    parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n    }\n}\n","import GalleryModal from './GalleryModal'\nimport DataManager from './DataManager'\n\nexport default class SummernoteGallery {\n    private options: any;\n    private plugin_default_options: {};\n    private editor: any;\n    private editable: any;\n    private context: any;\n    private plugin_options: any;\n    private modal: any;\n    private data_manager: any;\n    constructor(options: any) {\n        this.options = $.extend({\n            name: 'summernoteGallery',\n            buttonLabel: '<i class=\"fa-solid fa-file-image\"></i>',\n            tooltip: 'Campaign Gallery'\n        }, options);\n\n        this.plugin_default_options = {}\n    }\n\n    // set the focus to the last focused element in the editor\n    recoverEditorFocus() {\n        var last_focused_el = $(this.editor).data('last_focused_element');\n        if(typeof last_focused_el !== \"undefined\") {\n            var editor = this.editable;\n            var range = document.createRange();\n            var sel = window.getSelection();\n            var cursor_position =  last_focused_el.length;\n\n            range.setStart(last_focused_el, cursor_position);\n            range.collapse(true);\n            sel.removeAllRanges();\n            sel.addRange(range);\n            editor.focus();\n        }\n    }\n\n    saveLastFocusedElement() {\n        var focused_element: any = window.getSelection().focusNode;\n        var parent = $(this.editable).get(0);\n        if ($.contains(parent, focused_element)) {\n            $(this.editor).data('last_focused_element', focused_element)\n        }\n    }\n\n    attachEditorEvents() {\n        var _this = this;\n\n        $(this.editable).on('keypress, mousemove', function() {\n            _this.saveLastFocusedElement();\n        })\n\n        $(this.editable).on('click', 'summernote-gallery-brick .delete', function () {\n            // delete brick\n        })\n\n        $(this.editable).on('click', 'summernote-gallery-brick .edit', function () {\n            let $brick = $(this).parents('summernote-gallery-brick');\n            let data = $brick.data('brick'); // json\n\n            _this.modal.open(data);\n        })\n    }\n\n    initGallery(context: any) {\n        this.context = context;\n        this.editor = this.context.layoutInfo.note;\n        this.editable = this.context.layoutInfo.editable;\n        this.plugin_options = $.extend(\n            this.plugin_default_options,\n            this.context.options[this.options.name] || {}\n        )\n\n        this.modal = new GalleryModal(this.plugin_options.modal);\n        this.data_manager = new DataManager(this.plugin_options.source);\n\n        this.attachModalEvents();\n        this.attachEditorEvents();\n    }\n\n    attachModalEvents() {\n        var _this = this;\n\n        this.modal.event.on('beforeSave', function (gallery_modal: any) {\n            _this.recoverEditorFocus();\n        });\n\n        this.modal.event.on('save', function (gallery_modal: any, $image: any) {\n            // add selected images to summernote editor\n            _this.context.invoke(\n                'editor.pasteHTML',\n                '<img src=\"' + $image.attr('src') + '\" alt=\"' + ($image.attr('alt') || \"\") + '\" data-gallery-id=\"' + ($image.data('gallery-id') || \"\") + '\" />'\n            );\n        });\n\n        this.modal.event.on('scrollBottom', function (gallery_modal: any) {\n            if (_this.modal.options.loadOnScroll) {\n                _this.data_manager.fetchNext();\n            }\n        });\n        this.modal.event.on('loadFolder', function (random: any, folder: any) {\n            _this.data_manager.fetchFolder(folder);\n        });\n\n        this.modal.event.on('close', function (gallery_modal: any) {\n            _this.data_manager.init();\n            _this.modal.clearContent();\n        });\n    }\n\n    createButton() {\n        var _this = this;\n\n        var button = ($ as any).summernote.ui.button({\n            className: 'w-100',\n            contents: this.options.buttonLabel,\n            tooltip: this.options.tooltip,\n            click: function() {\n                _this.openGallery();\n            }\n        });\n\n        // create jQuery object from button instance.\n        return button.render();\n    }\n\n    attachDataEvents() {\n        var _this = this;\n\n        this.data_manager.event\n        .on('beforeFetch', function () {\n            _this.modal.showLoading();\n        })\n        .on('fetch', function (data: any, page: any, link: any) {\n            _this.modal.addImages(data, page);\n\n            setTimeout(function () {\n                if (_this.modal.options.loadOnScroll && !_this.modal.imagesContainerHasScroll()) {\n                    // The loadOnScroll won't work if the images' container doesn't have the scroll displayed,\n                    // so we need to keep loading the images until the scroll shows.\n                    _this.data_manager.fetchNext();\n                }\n            }, 2000)\n        })\n        .on('afterFetch', function () {\n            _this.modal.hideLoading();\n        })\n        .on('error', function (error: any) {\n            _this.modal.showError(error, true);\n        });\n    }\n\n    openGallery() {\n        this.attachDataEvents();\n        this.data_manager.fetchData();\n        this.modal.open();\n    }\n}","import GalleryPlugin from './Module'\n\nvar gallery_plugin = new GalleryPlugin({});\n\n// add the plugin to summernote\n$.extend(($ as any).summernote.plugins, gallery_plugin.getPlugin());","import SummernoteGallery from './SummernoteGallery'\n\nexport default class GalleryPlugin {\n    protected summernote_gallery: any\n    constructor(options: any) {\n        this.summernote_gallery = new SummernoteGallery(options);\n    }\n\n    getPlugin() {\n        let plugin = {};\n        let _this = this;\n        let options = this.summernote_gallery.options\n\n        // @ts-ignore\n        plugin[options.name] = function(context) {\n\n            let sgOptions = context.options[options.name] || {}\n            let buttonLabel = sgOptions.buttonLabel || _this.summernote_gallery.options.buttonLabel\n\n            _this.summernote_gallery.options.buttonLabel = buttonLabel\n\n            // add gallery button\n            context.memo('button.' + options.name, _this.createButton());\n\n            this.events = {\n                'summernote.keyup': function(we: any, e: any)\n                {\n                    _this.summernote_gallery.saveLastFocusedElement();\n                }\n            };\n\n            this.initialize = function() {\n                _this.summernote_gallery.initGallery(context);\n            };\n        }\n\n        return plugin;\n    }\n\n    createButton() {\n        return this.summernote_gallery.createButton();\n    }\n}"],"names":["this","events_queue","on","event_name","closure","Array","isArray","push","trigger","params","events","i","length","apply","clearAll","options","$","extend","loadOnScroll","maxHeight","title","close_text","ok_text","selectAll_text","deselectAll_text","noImageSelected_msg","event","template","getModalTemplate","$modal","hide","select_class","addStyleToDom","setOptions","attachEvents","find","css","html","addImages","data","page","$page_images","createImages","append","_this","content","folder","$image","url","loadFolder","$item","prepend","get","onload","siblings","toggleClass","attr","src","id","showError","message_text","permanent","$message","setTimeout","showLoading","show","hideLoading","$modal_body","click","$selected_img","modal","each","index","el","removeClass","addClass","scroll","$images_list","scrollTop","height","open","clearContent","imagesContainerHasScroll","$images_container","parseInt","header_content","fn","Constructor","VERSION","join","reverse","$css","appendTo","responseDataKey","nextPageKey","init","current_page","is_fetching_locked","fetch_url","fetch_type","setNextFetch","response","next_link","lockFetching","unlockFetching","getObjectKeyByString","object","dotted_key","default_val","value","split","reduce","item","isEmptyObject","parseResponse","fetchData","ajax","beforeSend","xhr","request_link","always","done","status_text","parsed_response","fail","fetchNext","fetchFolder","current_link","name","buttonLabel","tooltip","plugin_default_options","recoverEditorFocus","last_focused_el","editor","editable","range","document","createRange","sel","window","getSelection","cursor_position","setStart","collapse","removeAllRanges","addRange","focus","saveLastFocusedElement","focused_element","focusNode","parent","contains","attachEditorEvents","parents","initGallery","context","layoutInfo","note","plugin_options","data_manager","source","attachModalEvents","gallery_modal","invoke","random","createButton","summernote","ui","button","className","contents","openGallery","render","attachDataEvents","link","error","gallery_plugin","summernote_gallery","getPlugin","plugin","memo","we","e","initialize","plugins"],"sourceRoot":""}